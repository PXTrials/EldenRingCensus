services:
    db:
        image: mariadb:lts
        hostname: erc_db
        container_name: erc_db
        restart: "no"
        ports:
            - "3306:3306"
        environment:
            - MARIADB_ALLOW_EMPTY_ROOT_PASSWORD=1
            - MARIADB_HOST=${DATABASE_HOST}
            - MARIADB_DATABASE=${DATABASE_NAME}
            - MARIADB_USER=${DATABASE_USER}
            - MARIADB_PASSWORD=${DATABASE_PASSWORD}
        healthcheck:
            test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
            start_period: 10s
            interval: 10s
            timeout: 5s
            retries: 3
    webui:
        build:
            context: .
            target: python-base
        hostname: erc_web
        container_name: erc_web
        pull_policy: build
        environment:
            - DATABASE_NAME=${DATABASE_NAME}
            - DATABASE_HOST=${DATABASE_HOST}
            - DATABASE_PORT=${DATABASE_PORT}
            - DATABASE_USER=${DATABASE_USER}
            - DATABASE_PASSWORD=${DATABASE_PASSWORD}
        ports:
            - "8000:8000"
        volumes:
            #- .:/opt/project
            - ./volumes/proxy/media:/opt/project/media
            - ./volumes/proxy/static:/opt/project/static
        #command: "python manage.py runserver 0:8000"
        command: gunicorn erc.wsgi:application --bind 0:8000
        depends_on:
            db:
                condition: service_healthy
                restart: true #restart webui if db is restarted
        develop:
            watch:
                - action: sync
                  path: .
                  target: /opt/project

    proxy:
        image: nginx:1.19
        container_name: erc_proxy
        hostname: erc_proxy
        depends_on:
            - webui
        ports:
            - "443:443"
            - "80:80"
        volumes:
            #Configuration
            - ./proxy/config/nginx.conf:/etc/nginx/nginx.conf

            #Data
            - ./volumes/proxy/media:/opt/media
            - ./volumes/proxy/static:/opt/static
            - ./volumes/proxy/certificates:/opt/certificates

